{"version":3,"sources":["comm/_reset.scss","utils/_mixins.scss","guide.css","comm/_guide.scss"],"names":[],"mappings":"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","file":"../guide.css","sourcesContent":["@charset \"utf-8\";\r\n\r\nhtml {\r\n\theight: 100%;\r\n\tfont-size: $fs-base;\r\n\t-webkit-text-size-adjust: 100%;\r\n\t-moz-text-size-adjust: 100%;\r\n\t-ms-text-size-adjust: 100%;\r\n\t-webkit-tap-highlight-color: transparent;\r\n}\r\n\r\nbody {\r\n\tmin-height: 100%;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tfont-family: 'Nanum Gothic', \"나눔 고딕\", \"맑은 고딕\", \"Malgun Gothic\", Dotum, \"돋움\", sans-serif;\r\n\tcolor: $bc1;\r\n\tline-height: 1.15;\r\n}\r\n\r\nblockquote,\r\nbutton,\r\ncode,\r\ndiv,\r\ndl,\r\ndt,\r\ndd,\r\nfigure,\r\nfieldset,\r\nform,\r\np,\r\npre,\r\ninput,\r\nselect,\r\ntextarea,\r\ntable,\r\nth,\r\ntd,\r\nul,\r\nol,\r\nli,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tfont-family: inherit;\r\n}\r\n\r\nul,\r\nol,\r\nli {\r\n\tlist-style: none;\r\n}\r\n\r\nli {\r\n\tvertical-align: top;\r\n}\r\n\r\nfieldset,\r\nimg {\r\n\tborder: 0 none;\r\n}\r\n\r\naddress,\r\nem {\r\n\tfont-style: normal;\r\n}\r\n\r\nlabel {\r\n\tcursor: pointer;\r\n}\r\n\r\nselect {\r\n\t-webkit-border-radius: 0;\r\n\tborder-radius: 0;\r\n\ttext-transform: none;\r\n}\r\n\r\noption {\r\n\tpadding-right: 6px;\r\n}\r\n\r\ncaption span,\r\nlegend span {\r\n\tvisibility: hidden;\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n}\r\n\r\ntable,\r\ntd,\r\ntr {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\na,\r\na:active,\r\na:hover {\r\n\tcolor: inherit;\r\n\ttext-decoration: none;\r\n}\r\n\r\na:focus {\r\n\toutline: thin dotted;\r\n}\r\n\r\na:active,\r\na:hover {\r\n\toutline: 0;\r\n}\r\n\r\nabbr[title] {\r\n\tborder-bottom: 1px dotted;\r\n}\r\n\r\nstrong {\r\n\tfont-weight: 600;\r\n}\r\n\r\nhr {\r\n\theight: 0;\r\n\t-moz-box-sizing: content-box;\r\n\tbox-sizing: content-box;\r\n}\r\n\r\npre {\r\n\twhite-space: pre-wrap;\r\n}\r\n\r\nsmall {\r\n\tfont-size: 80%;\r\n}\r\n\r\nsub,\r\nsup {\r\n\tposition: relative;\r\n\tfont-size: 75%;\r\n\tline-height: 0;\r\n\tvertical-align: baseline;\r\n}\r\n\r\nsup {\r\n\ttop: -.5em;\r\n}\r\n\r\nsub {\r\n\tbottom: -.25em;\r\n}\r\n\r\nbutton,\r\ninput,\r\ntextarea {\r\n\toverflow: visible;\r\n\tline-height: normal;\r\n\toutline: 0 none !important;\r\n}\r\n\r\nbutton,\r\nselect {\r\n\ttext-transform: none;\r\n}\r\n\r\nbutton[disabled],\r\n[type='button'][disabled],\r\n[type='reset'][disabled],\r\n[type='submit'][disabled] {\r\n  cursor: default;\r\n}\r\n\r\n// Remove the inner border and padding in Firefox.\r\nbutton::-moz-focus-inner,\r\n[type='button']::-moz-focus-inner,\r\n[type='reset']::-moz-focus-inner,\r\n[type='submit']::-moz-focus-inner {\r\n  border-style: none;\r\n  padding: 0;\r\n}\r\n\r\ntextarea {\r\n\toverflow: auto;\r\n\t-webkit-border-radius:0; \r\n    border-radius: 0;\r\n\tresize: vertical;\r\n\t-webkit-appearance: none;\r\n}\r\n\r\ninput[type=button] {\r\n\toverflow: visible;\r\n\tborder-radius: 0;\r\n\tbox-sizing: content-box;\r\n}\r\n\r\nbutton,\r\ninput[type=button],\r\ninput[type=reset],\r\ninput[type=submit] {\r\n\t-webkit-appearance: button;\r\n\tcursor: pointer;\r\n}\r\n\r\n[type=text],\r\n[type=password],\r\n[type=tel],\r\n[type=number],\r\n[type=search],\r\n[type=email],\r\n[type=url] {\r\n\t-webkit-appearance: none;\r\n\t-webkit-border-radius: 0;\r\n\tborder-radius: 0;\r\n}\r\n\r\n// Correct the odd appearance in Chrome and Safari.\r\n// Correct the outline style in Safari.\r\n[type='search'] {\r\n  \t// -webkit-appearance: textfield;\r\n\toutline-offset: -2px;\r\n}\r\n\r\n// Remove the inner padding in Chrome and Safari on macOS.\r\n[type='search']::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n// Correct the cursor style of increment and decrement buttons in Chrome.\r\n[type='number']::-webkit-inner-spin-button,\r\n[type='number']::-webkit-outer-spin-button {\r\n  \theight: auto;\r\n}\r\n\r\n[type=checkbox],\r\n[type=radio] {\r\n\twidth: 13px;\r\n\theight: 13px;\r\n  \tpadding: 0;\r\n\tbox-sizing: border-box;\r\n}\r\n\r\n[readonly],\r\n[readonly='readonly'] {\r\n\tbackground: #ebebe4;\r\n}\r\n\r\n// Fix placeholder font properties inheritance.\r\n::-webkit-input-placeholder,\r\n:-ms-input-placeholder,\r\n::-ms-input-placeholder,\r\n::placeholder {\r\n  font: inherit;\r\n}\r\n\r\n// Add the correct display in IE 10.\r\n[hidden] {\r\n  display: none;\r\n}\r\n\r\n// retina\r\n@include respond-to(retina) {\r\n\tbody {\r\n\t\tfont-family: 'AppleGothicNeoSD', 'Apple SD 산돌고딕 Neo', 'Nanum Gothic', \"나눔 고딕\", 'Droid sans', sans-serif;\r\n\t}\r\n}\r\n\r\n// 반응형 max 480\r\n@include respond-to(mobiles) {\r\n    ::-webkit-scrollbar {\r\n        width: 0;\r\n        height: 3px;\r\n        background: transparent;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background: rgba(0, 0, 0, 0.1);\r\n    }\r\n}","@charset \"utf-8\";\r\n\r\n// font size \r\n$fs-base: 14px;\r\n\r\n// color\r\n$bc1: #333;\r\n$bc2: #666;\r\n$bc3: #999;\r\n\r\n$pc1: #418ded; // blue\r\n$pc1_hover: #3281ed;\r\n$pc2: #f34522; // light red\r\n$pc2_hover: #e5310c;\r\n$pc3: #02BC77; // green\r\n$pc3_hover: #018a57;\r\n$pc4: #ff6600; // orange\r\n\r\n// font size px to rem\r\n@function calculateRem($size) {\r\n\t$remSize: $size / $fs-base;\r\n\t@return #{$remSize}rem;\r\n}\r\n\r\n@mixin fontSize($size) {\r\n\tfont-size: calculateRem($size);\r\n}\r\n\r\n//font color\r\n$fc1: #333;\r\n$fc2: #666;\r\n$fc3: #999;\r\n\r\n$gold: gold;\r\n$silver: silver;\r\n$bronze: #cd7f32;\r\n\r\n// border 스타일\r\n@mixin border-style($top, $right, $bottom, $left, $style, $color) {\r\n\tborder-width: $top $right $bottom $left;\r\n\tborder-style: $style;\r\n\tborder-color: $color;\r\n}\r\n\r\n@mixin rounded($tr, $br, $bl, $tl) {\r\n\t-webkit-border-top-right-radius: $tr;\r\n\t-moz-border-top-right-radius: $tr;\r\n\tborder-top-right-radius: $tr;\r\n\t\r\n\t-webkit-border-bottom-right-radius: $br;\r\n\t-moz-border-bottom-right-radius: $br;\r\n\tborder-bottom-right-radius: $br;\r\n\r\n\t-webkit-border-bottom-left-radius: $bl;\r\n\t-moz-border-bottom-left-radius: $bl;\r\n\tborder-bottom-left-radius: $bl;\r\n\r\n\t-webkit-border-top-left-radius: $tl;\r\n\t-moz-border-top-left-radius: $tl;\r\n\tborder-top-left-radius: $tl;\r\n}\r\n\r\n// jobindex width\r\n@mixin default-width {\r\n\tmax-width: 1200px;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n}\r\n\r\n// Responsive\r\n@mixin respond-to($media) {\r\n\t$desktop: '(min-width:1201px)';\r\n\t// $small_desktop: '(max-width:1200px)';\r\n\t$mobiles: '(max-width:768px)';\r\n\t$small_mobiles: '(max-width:480px)';\r\n\t// retina\r\n\t$retina: '(-webkit-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (min--moz-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5)';\r\n\r\n\t@if $media == desktop {\r\n\t\t@media only screen and #{$desktop} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t// @else if $media == small_desktop {\r\n\t// \t@media only screen and #{$small_desktop} {\r\n\t// \t\t@content;\r\n\t// \t}\r\n\t// }\r\n\t@else if $media == mobiles {\r\n\t\t@media only screen and #{$mobiles} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == small_mobiles {\r\n\t\t@media only screen and #{$small_mobiles} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\t@else if $media == retina {\r\n\t\t@media only screen and #{$retina} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 비율\r\n@mixin responsive-ratio($x, $y, $pseudo:false) {\r\n\t$padding: unquote(($y / $x) * 100 + '%');\r\n\r\n\t@if $pseudo {\r\n\t\t&:before {\r\n\t\t\t@include pseudo($pos: relative);\r\n\t\t\twidth: 100%;\r\n\t\t\tpadding-top: $padding;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t@else {\r\n\t\tpadding-top: $padding;\r\n\t}\r\n\r\n}\r\n\r\n// grid \r\n// @mixin grid-cols($col, $gap:null) {\r\n// \twidth: percentage(1 / $col);\r\n// \tpadding-left: $gap;\r\n// \tpadding-right: $gap;\r\n// \tbox-sizing: border-box;\r\n// }\r\n\r\n@mixin col($col, $sum:22) {\r\n  \twidth: percentage($col/$sum);\r\n}\r\n\r\n// float clear\r\n@mixin clear {\r\n\t*zoom: 1;\r\n\r\n\t&:after {\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t\theight: 0;\r\n\t\tfont-size: 0;\r\n\t\tline-height: 0;\r\n\t\tcontent: '';\r\n\t}\r\n}\r\n\r\n@mixin btn-more($margintop:15px, $fsize:15px, $isize:12px) {\r\n\twidth: 100%;\r\n\theight: 34px;\r\n\tmargin-top: $margintop;\r\n\tborder: 1px solid #ccc;\r\n\tbackground: #fff;\r\n\r\n\t@include fontSize($fsize);\r\n\r\n\ti {\r\n\t\t@include fontSize($isize);\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tcolor: $pc1_hover;\r\n\t\tbackground: #f9f9f9;\r\n\t}\r\n}\r\n\r\n// 사각형\r\n@mixin size($width, $height:$width) {\r\n\twidth: $width;\r\n\theight: $height;\r\n}\r\n\r\n// 줄바꿈\r\n@mixin wordwrap($wordwrap:break-word,$wordbreak:keep-all) {\r\n\tword-wrap: $wordwrap;\r\n\tword-break: $wordbreak;\r\n\t-ms-word-break: break-all;\r\n\toverflow-wrap: break-word;\r\n} \r\n\r\n// 말줄임\r\n@mixin truncate($truncation-boundary:null) {\r\n\tmax-width: $truncation-boundary;\r\n\twhite-space: nowrap;\r\n\toverflow: hidden;\r\n\ttext-overflow: ellipsis;\r\n}\r\n\r\n// 말줄임 여러줄\r\n@mixin truncate2($truncation-boundary:null, $line-clamp:2) {\r\n\tdisplay: -webkit-box;\r\n\tdisplay: -ms-box;\r\n\t-webkit-box-orient: vertical;\r\n\t-webkit-line-clamp: $line-clamp;\r\n\toverflow: hidden;\r\n\tmax-width: $truncation-boundary;\r\n\tword-wrap: break-word;\r\n\tword-break: keep-all;\r\n\ttext-overflow: ellipsis;\r\n}\r\n\r\n// 내용없음\r\n@mixin not-found($padding:30px 0, $align:center) {\r\n\tpadding: $padding;\r\n\ttext-align: $align;\r\n}\r\n\r\n// general mixin\r\n// generic transform\r\n@mixin transform($transforms) {\r\n\t-moz-transform: $transforms;\r\n\t-o-transform: $transforms;\r\n\t-ms-transform: $transforms;\r\n\t-webkit-transform: $transforms;\r\n\ttransform: $transforms;\r\n}\r\n\r\n// rotate\r\n@mixin rotate ($deg) {\r\n\t@include transform(rotate(#{$deg}deg));\r\n}\r\n\r\n// scale\r\n@mixin scale($scale) {\r\n\t@include transform(scale($scale));\r\n}\r\n\r\n// translate\r\n@mixin translate ($x, $y) {\r\n\t@include transform(translate($x, $y));\r\n}\r\n\r\n// skew\r\n@mixin skew ($x, $y) {\r\n\t@include transform(skew(#{$x}deg, #{$y}deg));\r\n}\r\n\r\n//transform origin\r\n@mixin transform-origin ($origin) {\r\n\tmoz-transform-origin: $origin;\r\n\t-o-transform-origin: $origin;\r\n\t-ms-transform-origin: $origin;\r\n\t-webkit-transform-origin: $origin;\r\n\ttransform-origin: $origin;\r\n}\r\n\r\n@mixin transition($transition...) {\r\n\t-moz-transition: $transition;\r\n\t-o-transition: $transition;\r\n\t-webkit-transition: $transition;\r\n\ttransition: $transition;\r\n}\r\n\r\n@mixin transition-property($property...) {\r\n\t-moz-transition-property: $property;\r\n\t-o-transition-property: $property;\r\n\t-webkit-transition-property: $property;\r\n\ttransition-property: $property;\r\n}\r\n\r\n@mixin transition-duration($duration...) {\r\n\t-moz-transition-property: $duration;\r\n\t-o-transition-property: $duration;\r\n\t-webkit-transition-property: $duration;\r\n\ttransition-property: $duration;\r\n}\r\n\r\n@mixin transition-timing-function($timing...) {\r\n\t-moz-transition-timing-function: $timing;\r\n\t-o-transition-timing-function: $timing;\r\n\t-webkit-transition-timing-function: $timing;\r\n\ttransition-timing-function: $timing;\r\n}\r\n\r\n@mixin transition-delay($delay...) {\r\n\t-moz-transition-delay: $delay;\r\n\t-o-transition-delay: $delay;\r\n\t-webkit-transition-delay: $delay;\r\n\ttransition-delay: $delay;\r\n}\r\n\r\n@mixin calc($property, $expression) {\r\n\t#{$property}: -moz-calc(#{$expression});\r\n\t#{$property}: -webkit-calc(#{$expression});\r\n\t#{$property}: calc(#{$expression});\r\n}\r\n\r\n@mixin box-shadow($param) {\r\n\t-webkit-box-shadow: $param;\r\n\t-moz-box-shadow: $param;\r\n\tbox-shadow: $param;\r\n}\r\n\r\n@mixin box-sizing($type:border-box) {\r\n\t-webkit-box-sizing: $type;\r\n\t-moz-box-sizing: $type;\r\n\t-o-box-sizing: $type;\r\n\t-ms-box-sizing: $type;\r\n\tbox-sizing: $type;\r\n}\r\n\r\n@mixin opacity($value:0) {\r\n\t-ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=\"+$value+\")\";\r\n\tfilter: alpha(opacity=$value);\r\n\t-moz-opacity: $value*0.01;\r\n\t-khtml-opacity: $value*0.01;\r\n\topacity: $value*0.01;\r\n}\r\n\r\n@mixin linearGradient($from, $to) {\r\n\tbackground: $to;\r\n\tbackground: -moz-linear-gradient(top, $from 0%, $to 100%);\r\n\tbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $from), color-stop(100%, $to));\r\n\tbackground: -webkit-linear-gradient(top, $from 0%, $to 100%);\r\n\tbackground: -o-linear-gradient(top, $from 0%, $to 100%);\r\n\tbackground: -ms-linear-gradient(top, $from 0%, $to 100%);\r\n\tbackground: linear-gradient(to bottom, $from 0%, $to 100%);\r\n}\r\n\r\n@mixin triangle($direction, $width, $height, $color) {\r\n\tcontent: '';\r\n\tdisplay: inline-block;\r\n\tvertical-align: middle;\r\n\twidth: 0;\r\n\theight: 0;\r\n\tborder-style: solid;\r\n\r\n\t@if $direction == up {\r\n\t\tborder-width: 0 $width*0.5 $height $width*0.5;\r\n\t\tborder-color: transparent transparent $color;\r\n\t}\r\n\r\n\t@else if $direction == down {\r\n\t\tborder-width: $height $width*0.5 0 $width*0.5;\r\n\t\tborder-color: $color transparent transparent;\r\n\t}\r\n\r\n\t@else if $direction == left {\r\n\t\tborder-width: $width $height*0.5 $height*0.5 0;\r\n\t\tborder-color: transparent $color transparent;\r\n\t}\r\n\r\n\t@else if $direction == right {\r\n\t\tborder-width: $width 0 $height*0.5 $height*0.5;\r\n\t\tborder-color: transparent $color transparent;\r\n\t}\r\n\r\n}\r\n\r\n@function black($opacity) {\r\n\t@return rgba(0, 0, 0, $opacity);\r\n}\r\n\r\n@function white($opacity) {\r\n\t@return rgba(255, 255, 255, $opacity);\r\n}\r\n\r\n// Flexbox Containers\r\n\r\n// The 'flex' value causes an element to generate a block-level flex\r\n// container box.\r\n\r\n// The 'inline-flex' value causes an element to generate a inline-level\r\n// flex container box.\r\n\r\n// display:flex | inline-flex\r\n\r\n// http://w3.org/tr/css3-flexbox/#flex-containers\r\n\r\n// (Placeholder selectors for each type, for those who rather @extend)\r\n\r\n@mixin flexbox {\r\n\tdisplay: -webkit-box;\r\n\tdisplay: -webkit-flex;\r\n\tdisplay: -moz-flex;\r\n\tdisplay: -ms-flexbox;\r\n\tdisplay: flex;\r\n}\r\n\r\n%flexbox {\r\n\t@include flexbox;\r\n}\r\n\r\n@mixin inline-flex {\r\n\tdisplay: -webkit-inline-box;\r\n\tdisplay: -webkit-inline-flex;\r\n\tdisplay: -moz-inline-flex;\r\n\tdisplay: -ms-inline-flexbox;\r\n\tdisplay: inline-flex;\r\n}\r\n\r\n%inline-flex {\r\n\t@include inline-flex;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Direction\r\n\r\n// The 'flex-direction' property specifies how flex items are placed in\r\n// the flex container, by setting the direction of the flex container's\r\n// main axis. This determines the direction that flex items are laid out in.\r\n\r\n// Values:row | row-reverse | column | column-reverse\r\n// Default:row\r\n\r\n// http://w3.org/tr/css3-flexbox/#flex-direction-property\r\n\r\n@mixin flex-direction($value:row) {\r\n\t@if $value == row-reverse {\r\n\t\t-webkit-box-direction: reverse;\r\n\t\t-webkit-box-orient: horizontal;\r\n\t}\r\n\r\n\t@else if $value == column {\r\n\t\t-webkit-box-direction: normal;\r\n\t\t-webkit-box-orient: vertical;\r\n\t}\r\n\r\n\t@else if $value == column-reverse {\r\n\t\t-webkit-box-direction: reverse;\r\n\t\t-webkit-box-orient: vertical;\r\n\t}\r\n\r\n\t@else {\r\n\t\t-webkit-box-direction: normal;\r\n\t\t-webkit-box-orient: horizontal;\r\n\t}\r\n\r\n\t-webkit-flex-direction: $value;\r\n\t-moz-flex-direction: $value;\r\n\t-ms-flex-direction: $value;\r\n\tflex-direction: $value;\r\n}\r\n\r\n// Shorter version\r\n@mixin flex-dir($args...) {\r\n\t@include flex-direction($args...);\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Wrap\r\n\r\n// The 'flex-wrap' property controls whether the flex container is single-line\r\n// or multi-line, and the direction of the cross-axis, which determines\r\n// the direction new lines are stacked in.\r\n\r\n// Values:nowrap | wrap | wrap-reverse\r\n// Default:nowrap\r\n\r\n// http://w3.org/tr/css3-flexbox/#flex-wrap-property\r\n\r\n@mixin flex-wrap($value:nowrap) {\r\n\t// No Webkit Box fallback.\r\n\t-webkit-flex-wrap: $value;\r\n\t-moz-flex-wrap: $value;\r\n\r\n\t@if $value == nowrap {\r\n\t\t-ms-flex-wrap: none;\r\n\t}\r\n\r\n\t@else {\r\n\t\t-ms-flex-wrap: $value;\r\n\t}\r\n\r\n\tflex-wrap: $value;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Flow (shorthand)\r\n\r\n// The 'flex-flow' property is a shorthand for setting the 'flex-direction'\r\n// and 'flex-wrap' properties, which together define the flex container's\r\n// main and cross axes.\r\n\r\n// Values:<flex-direction> | <flex-wrap>\r\n// Default:row nowrap\r\n\r\n// http://w3.org/tr/css3-flexbox/#flex-flow-property\r\n\r\n@mixin flex-flow($values:(row nowrap)) {\r\n\t// No Webkit Box fallback.\r\n\t-webkit-flex-flow: $values;\r\n\t-moz-flex-flow: $values;\r\n\t-ms-flex-flow: $values;\r\n\tflex-flow: $values;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Order\r\n\r\n// The 'order' property controls the order in which flex items appear within\r\n// their flex container, by assigning them to ordinal groups.\r\n\r\n// Default:0\r\n\r\n// http://w3.org/tr/css3-flexbox/#order-property\r\n\r\n@mixin order($int:0) {\r\n\t-webkit-box-ordinal-group: $int + 1;\r\n\t-webkit-order: $int;\r\n\t-moz-order: $int;\r\n\t-ms-flex-order: $int;\r\n\torder: $int;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Grow\r\n\r\n// The 'flex-grow' property sets the flex grow factor. Negative numbers\r\n// are invalid.\r\n\r\n// Default:0\r\n\r\n// http://w3.org/tr/css3-flexbox/#flex-grow-property\r\n\r\n@mixin flex-grow($int:0) {\r\n\t-webkit-box-flex: $int;\r\n\t-webkit-flex-grow: $int;\r\n\t-moz-flex-grow: $int;\r\n\t-ms-flex-positive: $int;\r\n\tflex-grow: $int;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Shrink\r\n\r\n// The 'flex-shrink' property sets the flex shrink factor. Negative numbers\r\n// are invalid.\r\n\r\n// Default:1\r\n\r\n// http://w3.org/tr/css3-flexbox/#flex-shrink-property\r\n\r\n@mixin flex-shrink($int:1) {\r\n\t-webkit-flex-shrink: $int;\r\n\t-moz-flex-shrink: $int;\r\n\t-ms-flex-negative: $int;\r\n\tflex-shrink: $int;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Basis\r\n\r\n// The 'flex-basis' property sets the flex basis. Negative lengths are invalid.\r\n\r\n// Values:Like \"width\"\r\n// Default:auto\r\n\r\n// http://www.w3.org/TR/css3-flexbox/#flex-basis-property\r\n\r\n@mixin flex-basis($value:auto) {\r\n\t-webkit-flex-basis: $value;\r\n\t-moz-flex-basis: $value;\r\n\t-ms-flex-preferred-size: $value;\r\n\tflex-basis: $value;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox \"Flex\" (shorthand)\r\n\r\n// The 'flex' property specifies the components of a flexible length:the\r\n// flex grow factor and flex shrink factor, and the flex basis. When an\r\n// element is a flex item, 'flex' is consulted instead of the main size\r\n// property to determine the main size of the element. If an element is\r\n// not a flex item, 'flex' has no effect.\r\n\r\n// Values:none | <flex-grow> <flex-shrink> || <flex-basis>\r\n// Default:See individual properties (1 1 0).\r\n\r\n// http://w3.org/tr/css3-flexbox/#flex-property\r\n\r\n@mixin flex($fg:1, $fs:null, $fb:null) {\r\n\t// Set a variable to be used by box-flex properties\r\n\t$fg-boxflex: $fg;\r\n\r\n\t// Box-Flex only supports a flex-grow value so let's grab the\r\n\t// first item in the list and just return that.\r\n\t@if type-of($fg) == 'list' {\r\n\t\t$fg-boxflex: nth($fg, 1);\r\n\t}\r\n\r\n\t-webkit-box-flex: $fg-boxflex;\r\n\t-webkit-flex: $fg $fs $fb;\r\n\t-moz-box-flex: $fg-boxflex;\r\n\t-moz-flex: $fg $fs $fb;\r\n\t-ms-flex: $fg $fs $fb;\r\n\tflex: $fg $fs $fb;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Justify Content\r\n\r\n// The 'justify-content' property aligns flex items along the main axis\r\n// of the current line of the flex container. This is done after any flexible\r\n// lengths and any auto margins have been resolved. Typically it helps distribute\r\n// extra free space leftover when either all the flex items on a line are\r\n// inflexible, or are flexible but have reached their maximum size. It also\r\n// exerts some control over the alignment of items when they overflow the line.\r\n\r\n// Note:'space-*' values not supported in older syntaxes.\r\n\r\n// Values:flex-start | flex-end | center | space-between | space-around\r\n// Default:flex-start\r\n\r\n// http://w3.org/tr/css3-flexbox/#justify-content-property\r\n\r\n@mixin justify-content($value:flex-start) {\r\n\t@if $value == flex-start {\r\n\t\t-webkit-box-pack: start;\r\n\t\t-ms-flex-pack: start;\r\n\t}\r\n\r\n\t@else if $value == flex-end {\r\n\t\t-webkit-box-pack: end;\r\n\t\t-ms-flex-pack: end;\r\n\t}\r\n\r\n\t@else if $value == space-between {\r\n\t\t-webkit-box-pack: justify;\r\n\t\t-ms-flex-pack: justify;\r\n\t}\r\n\r\n\t@else if $value == space-around {\r\n\t\t-ms-flex-pack: distribute;\r\n\t}\r\n\r\n\t@else {\r\n\t\t-webkit-box-pack: $value;\r\n\t\t-ms-flex-pack: $value;\r\n\t}\r\n\r\n\t-webkit-justify-content: $value;\r\n\t-moz-justify-content: $value;\r\n\tjustify-content: $value;\r\n}\r\n\r\n// Shorter version\r\n@mixin flex-just($args...) {\r\n\t@include justify-content($args...);\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Align Items\r\n\r\n// Flex items can be aligned in the cross axis of the current line of the\r\n// flex container, similar to 'justify-content' but in the perpendicular\r\n// direction. 'align-items' sets the default alignment for all of the flex\r\n// container's items, including anonymous flex items. 'align-self' allows\r\n// this default alignment to be overridden for individual flex items. (For\r\n// anonymous flex items, 'align-self' always matches the value of 'align-items'\r\n// on their associated flex container.)\r\n\r\n// Values:flex-start | flex-end | center | baseline | stretch\r\n// Default:stretch\r\n\r\n// http://w3.org/tr/css3-flexbox/#align-items-property\r\n\r\n@mixin align-items($value:stretch) {\r\n\t@if $value == flex-start {\r\n\t\t-webkit-box-align: start;\r\n\t\t-ms-flex-align: start;\r\n\t}\r\n\r\n\t@else if $value == flex-end {\r\n\t\t-webkit-box-align: end;\r\n\t\t-ms-flex-align: end;\r\n\t}\r\n\r\n\t@else {\r\n\t\t-webkit-box-align: $value;\r\n\t\t-ms-flex-align: $value;\r\n\t}\r\n\r\n\t-webkit-align-items: $value;\r\n\t-moz-align-items: $value;\r\n\talign-items: $value;\r\n}\r\n\r\n// ----------------------------------\r\n// Flexbox Align Self\r\n\r\n// Values:auto | flex-start | flex-end | center | baseline | stretch\r\n// Default:auto\r\n\r\n@mixin align-self($value:auto) {\r\n\t// No Webkit Box Fallback.\r\n\t-webkit-align-self: $value;\r\n\t-moz-align-self: $value;\r\n\r\n\t@if $value == flex-start {\r\n\t\t-ms-flex-item-align: start;\r\n\t}\r\n\r\n\t@else if $value == flex-end {\r\n\t\t-ms-flex-item-align: end;\r\n\t}\r\n\r\n\t@else {\r\n\t\t-ms-flex-item-align: $value;\r\n\t}\r\n\r\n\talign-self: $value;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n// Flexbox Align Content\r\n\r\n// The 'align-content' property aligns a flex container's lines within the\r\n// flex container when there is extra space in the cross-axis, similar to\r\n// how 'justify-content' aligns individual items within the main-axis. Note,\r\n// this property has no effect when the flexbox has only a single line.\r\n\r\n// Values:flex-start | flex-end | center | space-between | space-around | stretch\r\n// Default:stretch\r\n\r\n// http://w3.org/tr/css3-flexbox/#align-content-property\r\n\r\n@mixin align-content($value:stretch) {\r\n\t// No Webkit Box Fallback.\r\n\t-webkit-align-content: $value;\r\n\t-moz-align-content: $value;\r\n\r\n\t@if $value == flex-start {\r\n\t\t-ms-flex-line-pack: start;\r\n\t}\r\n\r\n\t@else if $value == flex-end {\r\n\t\t-ms-flex-line-pack: end;\r\n\t}\r\n\r\n\t@else {\r\n\t\t-ms-flex-line-pack: $value;\r\n\t}\r\n\r\n\talign-content: $value;\r\n}\r\n\r\n@mixin modal {\r\n\tposition: fixed;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tz-index: 100;\r\n\r\n\t&:before {\r\n\t\tcontent: \"\";\r\n\t\tposition: fixed;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\ttop: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(0, 0, 0, 0.7);\r\n\t\tz-index: 101;\r\n\t}\r\n}",null,"@charset \"utf-8\";\r\n\r\n#wrap {\r\n\tpadding: 30px;\r\n\r\n\th1 {\r\n\t\t@include transition(0.3s ease-in-out);\r\n\t}\r\n\t\r\n\t@include box-sizing();\r\n}\r\n\r\n.section {\r\n\tpadding: 20px;\r\n\r\n\th2 {\r\n\t\theight: 34px;\r\n\t\tpadding: 0 8px;\r\n\t\tborder-bottom: 1px solid #444;\r\n\t}\r\n}\r\n\r\n.article {\r\n\tul {\r\n\t\tpadding: 10px;\r\n\t}\r\n\r\n\tli {\r\n\t\tmargin-top: 15px;\r\n\t\tborder-top: 1px solid #eee;\r\n\r\n\t\t@include clear;\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin-top: 0;\r\n\t\t\tborder-top: 0;\r\n\t\t}\r\n\t}\r\n\r\n\tdl {\r\n\t\tfloat: left;\r\n\t\twidth: 25%;\r\n\t\tpadding: 10px;\r\n\r\n\t\t@include box-sizing();\r\n\r\n\t\tdt {\r\n\t\t\tmin-height: 20px;\r\n\t\t\tfont-weight: 600;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@include respond-to(small_mobiles) {\r\n\t#wrap {\r\n\t\tmin-width: 320px;\r\n\t\tpadding: 10px;\r\n\r\n\t\th1 {\r\n\t\t\tmargin-bottom: 20px;\r\n\t\t\tfont-size: 1.5rem;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t}\r\n\r\n\t.section {\r\n\t\tpadding: 5px;\r\n\t}\r\n\r\n\t.article {\r\n\t\tul {\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\r\n\t\tdl {\r\n\t\t\twidth: auto;\r\n\t\t\tfloat: none;\r\n\t\t}\r\n\t}\r\n}"]}